# ---------- Liquidsoap AutoDJ -> Icecast (Listen2MyRadio) ----------
# Reads songs from an .m3u (can be remote HTTP/HTTPS URLs or local files baked into the image)
# Streams MP3 to a remote Icecast server using env vars (Render Dashboard -> Environment)
# -------------------------------------------------------------------

# Log to stdout so you can see it in your host logs
set("log.stdout", true)
set("server.telnet", false)

# Env helpers
def getenv_or(k, d) = 
  if sys.getenv(k) == "" or sys.getenv(k) == nil then d else sys.getenv(k) end
end

bitrate   = int_of_string(getenv_or("BITRATE", "128"))
sampler   = int_of_string(getenv_or("SAMPLERATE", "44100"))
stereo    = getenv_or("STEREO", "true") == "true"

# Music source: random from playlist; reload every 60s so you can update remote .m3u links
s = playlist(mode="random", reload=60.0, "/app/playlist.m3u")

# Simple processing (optional)
s = normalize(s)
s = smart_crossfade(s)

# Output to Icecast (MP3)
output.icecast(
  %mp3(bitrate=bitrate, samplerate=sampler, stereo=stereo),
  host = getenv_or("ICECAST_HOST", ""),
  port = int_of_string(getenv_or("ICECAST_PORT", "8000")),
  password = getenv_or("ICECAST_PASSWORD", ""),
  mount = getenv_or("ICECAST_MOUNT", "/stream"),
  name  = getenv_or("STREAM_NAME", "AutoDJ by Liquidsoap"),
  description = getenv_or("STREAM_DESC", "Cloud AutoDJ"),
  url = getenv_or("STREAM_URL", ""),
  genre = getenv_or("STREAM_GENRE", "Various"),
  # L2MR usually needs legacy (non-SSL) Icecast. Keep reconnecting on failure.
  reconnect_delay = 5.0,
  fallible = true,
  s
)
